<div class="page">
    @model FoodIntakeModel
    <div class="heading">
        <div class="vertical_align">
            <a href="@Url.Action("Index", "FoodAndDrink")">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
<g>
    <path class="st27" d="M15.6,18l-6.9-5.5c-0.3-0.3-0.3-0.8,0-1L15.6,6"/>
</g>
                    </svg>

            <span>Back</span>
            </a>
        </div>
        <h1 class="minus-margin-60">Food Intake</h1>
    </div>
    <div class="date_header vertical-align">
        <a class="left_arrow" href="@Url.Action("Food", "FoodAndDrink" , new { addDays=(ViewBag.DayCount - 1)})">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                <g>
                    <path class="st21" d="M15.6,18l-6.9-5.5c-0.3-0.3-0.3-0.8,0-1L15.6,6" />
                </g>
            </svg>
        </a>
        <p>@ViewBag.CurrentDay</p>
        @if (ViewBag.DayCount < 0)
        {
            <a class="right_arrow" href="@Url.Action("Food", "FoodAndDrink" , new { addDays=(ViewBag.DayCount + 1) })">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                    <g>
                        <path class="st21" d="M8.4,6l6.9,5.5c0.3,0.3,0.3,0.8,0,1L8.4,18" />
                    </g>
                </svg>
            </a>
        }
        else
        {
         <a class="right_arrow_disabled">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                    <g>
                        <path class="st21_disabled" d="M8.4,6l6.9,5.5c0.3,0.3,0.3,0.8,0,1L8.4,18" />
                    </g>
                </svg>
            </a>
        }
    </div>

        <div class="margin-top-4 default-menu food-intake">

            <a href="@Url.Action((ViewBag.BreakfastCount != null) ? "FoodIntakeDetails" : "AddFoodIntakeDetails" , new { date=Model.Date, mealId = 1})">


            <div class="left">
                <p class="meal_heading margin-bottom-4">Breakfast</p>
            </div>
                @if (Model.Breakfast.Count > 0)
                {
            <div class="left">
                    @foreach (var food in Model.Breakfast)
                    {    
            
                        <p>@food.Name</p>
                     }</div>
            
                    if(ViewBag.BreakfastCount != null)
                    {
            <div class="right">
                    <canvas id="donutBreakfast" width="40" height="40"></canvas>
                    <p>@(ViewBag.BreakfastCount)&#37;</p>
                </div>
                    }
                    else
                    {
            <div class="right">
                    <p>No data added</p>
                </div>
                    }
                }
                else
                {
                    <p>No Data</p>
                }
            </a>


        
            <a href="@Url.Action((ViewBag.LunchCount != null) ? "FoodIntakeDetails" : "AddFoodIntakeDetails", new { date=Model.Date, mealId = 2})">
                <div class="left"><p class="meal_heading margin-bottom-4">Lunch</p></div>
                @if (Model.Lunch.Count > 0)
                {
            <div class="left">
                    @foreach (var food in Model.Lunch)
                    {

                        <p>@food.Name</p>
                    }</div>

                    if(ViewBag.LunchCount != null)
                    {
            <div class="right">
                    <canvas id="donutLunch" width="40" height="40"></canvas>
                    <p>@(ViewBag.LunchCount)&#37;</p>

                </div>
                    }
                    else
                    {
            <div class="right">
                    <p>No data added</p>
                </div>
                    }
                }
                else
                {
                    <p>No Data</p>
                }
            </a>
        
            <a id="dinnerButton" href="@Url.Action((ViewBag.DinnerCount != null && ViewBag.IsStaff) ? "Food" : "AddFoodIntakeDetails", "FoodAndDrink" , new { date=Model.Date, mealId = 3})">
          


                <div class="left">
            <p class="meal_heading margin-bottom-4">Dinner</p></div>  
                @if (Model.Dinner.Count > 0)
               {
            <div class="left">
                    @foreach (var food in Model.Dinner)
                    {
                        <p>@food.Name</p>
                    }
               </div>
 
                    if(ViewBag.DinnerCount != null)

                {  <div class="right">
            
                    <canvas id="donutDinner" width="40" height="40"></canvas>
                    <p>@(ViewBag.DinnerCount)&#37;</p></div>
                    }
                    else
                    {
            <div class="right">
                    <p class="title">No data added</p>
                </div>
                    }
                
                }
                else
                {
                    <p>No Data</p>
                } 
            </a>
  
            <a href="">
            <div>
                <div class="left">
                <p class="meal_heading margin-bottom-4">Additional Food</p>
                </div>
                
                @if (Model.Snacks.Count > 0)
                {
            <div class="left">
                    @foreach (var food in Model.Snacks)
                    {
                        <p>@food.Name</p>
                    <br>
                    }
            </div>
                
            <div class="right">
                    <canvas id="donutSnack" width="40" height="40"></canvas>
                    <p>@(ViewBag.SnackCount)&#37;</p>
               </div>
                }
                else
                { 
            <div class="left">
                    <p>No Data</p>
                </div>
                }
                </div>
            </a>
        </div>

    @if(ViewBag.IsStaff){
        if (ViewBag.IsSubmitted)
        {
            <button class="button-bottom" disabled="disabled">Add Food</button>
        }
        else
        {
            <button class="button-bottom" onclick="location.href='@Url.Action("AddFood", "FoodAndDrink")'">Add Food</button>
        }
    }
    </div>


    <script>
    var donutBreakfastEL = document.getElementById("donutBreakfast").getContext("2d");
    var donutBreakfast = new Chart(donutBreakfastEL).Doughnut(
    // Datas
    [
        {
            value: @(ViewBag.BreakfastCount),
            color: "@ViewBag.BreakfastColour",
            highlight: "#F6F6F6",
            label: "Red"
        },
        {
            value: (100 - @(ViewBag.BreakfastCount)),
            color: "#E6E6E6",
            highlight: "#F6F6F6",
            label: "Green"
        }
    ],
    // Options
    {
        segmentShowStroke : false,
        percentageInnerCutout : 50,
        animationSteps : 100,
        animationEasing : "easeOutCubic",
        animateRotate : true,
    });
      </script>
        <script>
     var donutLunchEL = document.getElementById("donutLunch").getContext("2d");
    var donutLunch = new Chart(donutLunchEL).Doughnut(
    // Datas
    [
         {
            value: @ViewBag.LunchCount,
            color: "@ViewBag.LunchColour",
            highlight: "#F6F6F6",
            label: "Red"
        },
        {
            value: (100 - @ViewBag.LunchCount),
            color: "#E6E6E6",
            highlight: "#F6F6F6",
            label: "Green"
        }
    ],
    // Options
    {
       segmentShowStroke : false,
        percentageInnerCutout : 50,
        animationSteps : 100,
        animationEasing : "easeOutCubic",
        animateRotate : true,
    });
      </script>
        <script>
     var donutDinnerEL = document.getElementById("donutDinner").getContext("2d");
    var donutDinner = new Chart(donutDinnerEL).Doughnut(
    // Datas
    [
        {
            value: @ViewBag.DinnerCount,
            color: "@ViewBag.DinnerColour",
            highlight: "#F6F6F6",
            label: "Red"
        },
        {
            value: (100 - @ViewBag.DinnerCount),
            color: "#E6E6E6",
            highlight: "#F6F6F6",
            label: "Green"
        }
    ],
    // Options
    {
       segmentShowStroke : false,
        percentageInnerCutout : 50,
        animationSteps : 100,
        animationEasing : "easeOutCubic",
        animateRotate : true,
    });
      </script>
        <script>
         var donutSnackEL = document.getElementById("donutSnack").getContext("2d");
    var donutSnack = new Chart(donutSnackEL).Doughnut(
    // Datas
    [
        {
            value: @ViewBag.SnackCount,
            color:"@ViewBag.SnackColour",
            highlight: "#F6F6F6",
            label: "Red"
        },
        {
            value: (100 - @ViewBag.SnackCount),
            color: "#E6E6E6",
            highlight: "#F6F6F6",
            label: "Green"
        }
    ],
    // Options
    {
       segmentShowStroke : false,
        percentageInnerCutout : 50,
        animationSteps : 100,
        animationEasing : "easeOutCubic",
        animateRotate : true,
    });
    
    </script>

    @section scripts
{
    <script>
    $(document).ready(function () {
    var disable = "@(ViewBag.DinnerCount != null && ViewBag.IsStaff)";
    var isStaff = "@ViewBag.IsStaff" ;
    $("#dinnerButton").on("click", function (e) {
        if(disable !== "False"){
            e.preventDefault();
    }    
     if(isStaff === "False"){
            e.preventDefault();
    }    

    });
});
    </script>
    }
