<div class="page">

            @model FoodIntakeDetailsModel
    <div class="heading">

          <div class="vertical_align">

        <a href="@Url.Action("Food", "FoodAndDrink")">               

                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
<g>
    <path class="st27" d="M15.6,18l-6.9-5.5c-0.3-0.3-0.3-0.8,0-1L15.6,6"/>
</g>
                    </svg>

            <span>Back</span>
            </a>
        </div>

<h1 class="minus-margin-60">Food Intake</h1>
</div>
    <div class="content-margin">
           <div class="date_header vertical-align">
                <p>@ViewBag.Date</p>
        </div>

                <div class="meal_header vertical-align">
            <p>@ViewBag.Meal</p>
        </div>
        <div class="fullpage_whiteBG">
            <div>
        <div class="left">
            <p class="meal_heading">Mains</p>
            <p>@Model.Main.Name</p>
            </div>
        
        <div class="right">
            <canvas id="donutMain" width="50px" height="50px"></canvas>
                    <p>@(ViewBag.MainCount)&#37;</p>
        </div>
        </div>

            <div>
        <div class="left">
            <p class="meal_heading">Sides</p>
            <p>@Model.Side.Name</p>
           </div>
        <div class="right">
            <canvas id="donutSide" width="50px" height="50px"></canvas>
                    <p>@(ViewBag.SideCount)&#37;</p>
        </div>

                </div>

            <div>

        <div class="left">
            <p class="meal_heading">Summary</p>
            <p>@Model.Summary</p>
            </div>
        
        <div class="right">
            <canvas id="donutTotal" width="50px" height="50px"></canvas>
                    <p>@(ViewBag.TotalCount)&#37;</p>
         </div>

                </div>
    </div>
</div>

 <script>
    var donutMainEL = document.getElementById("donutMain").getContext("2d");
    var donutMain = new Chart(donutMainEL).Doughnut(
    // Datas
    [
        {
            value: @(ViewBag.MainCount),
            color:"@ViewBag.MainColour",
            highlight: "#F6F6F6",
            label: "Red"
        },
        {
            value: (100 - @(ViewBag.MainCount)),
            color: "#E6E6E6",
            highlight: "#F6F6F6",
            label: "Green"
        }
    ],
    // Options
    {
       segmentShowStroke : false,
        percentageInnerCutout : 50,
        animationSteps : 100,
        animationEasing : "easeOutCubic",
        animateRotate : true,
    });

     var donutSideEL = document.getElementById("donutSide").getContext("2d");
    var donutSide = new Chart(donutSideEL).Doughnut(
    // Datas
    [
         {
            value: @ViewBag.SideCount,
            color:"@ViewBag.SideColour",
            highlight: "#F6F6F6",
            label: "Red"
        },
        {
            value: (100 - @ViewBag.SideCount),
            color: "#E6E6E6",
            highlight: "#F6F6F6",
            label: "Green"
        }
    ],
    // Options
    {
        segmentShowStroke : false,
        percentageInnerCutout : 50,
        animationSteps : 100,
        animationEasing : "easeOutCubic",
        animateRotate : true,
    });

     var donutTotalEL = document.getElementById("donutTotal").getContext("2d");
    var donutTotal = new Chart(donutTotalEL).Doughnut(
    // Datas
    [
        {
            value: @ViewBag.TotalCount,
            color:"@ViewBag.TotalColour",
            highlight: "#F6F6F6",
            label: "Red"
        },
        {
            value: (100 - @ViewBag.TotalCount),
            color: "#E6E6E6",
            highlight: "#F6F6F6",
            label: "Green"
        }
    ],
    // Options
    {
        segmentShowStroke : false,
        percentageInnerCutout : 50,
        animationSteps : 100,
        animationEasing : "easeOutCubic",
        animateRotate : true,
    });
    </script>
  